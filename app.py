import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
import json
from google.oauth2.service_account import Credentials

# Autentica√ß√£o com Google Sheets via segredo seguro
service_account_info = json.loads(st.secrets["GOOGLE_SERVICE_ACCOUNT_JSON"])
credentials = Credentials.from_service_account_info(service_account_info)
client = gspread.authorize(credentials)

SPREADSHEET_NAME = "Transferencias"
SHEET_NAME = "P√°gina1"
sheet = client.open(SPREADSHEET_NAME).worksheet(SHEET_NAME)

st.set_page_config(page_title="Registro Transfer√™ncia", layout="centered")
st.title("üöö Registro de Transfer√™ncia de Carga")

# Fun√ß√£o para registrar timestamp atual
def registrar_tempo(label):
    if st.button(f"Registrar {label}"):
        st.session_state[label] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

# Inicializar vari√°veis de sess√£o
campos_tempo = [
    "Entrada na F√°brica", "Encostou na doca F√°brica", "In√≠cio carregamento", "Fim carregamento",
    "Faturado", "Amarra√ß√£o carga", "Sa√≠da do p√°tio", "Entrada CD", "Encostou na doca CD",
    "In√≠cio Descarregamento CD", "Fim Descarregamento CD", "Sa√≠da CD"
]

for campo in campos_tempo:
    if campo not in st.session_state:
        st.session_state[campo] = ""

# Campos manuais
st.subheader("Dados do Ve√≠culo")
data = st.date_input("Data", value=datetime.today())
placa = st.text_input("Placa do caminh√£o")
conferente = st.text_input("Nome do conferente")

# Campos com bot√µes
st.subheader("F√°brica")
for campo in campos_tempo[:7]:
    registrar_tempo(campo)
    st.text_input(campo, value=st.session_state[campo], disabled=True)

st.subheader("Centro de Distribui√ß√£o (CD)")
for campo in campos_tempo[7:]:
    registrar_tempo(campo)
    st.text_input(campo, value=st.session_state[campo], disabled=True)

# Calcular tempos autom√°ticos
def calc_tempo(fim, inicio):
    try:
        t1 = datetime.strptime(st.session_state[fim], "%Y-%m-%d %H:%M:%S")
        t0 = datetime.strptime(st.session_state[inicio], "%Y-%m-%d %H:%M:%S")
        return str(t1 - t0)
    except:
        return ""

# Campos calculados
tempo_carreg = calc_tempo("Fim carregamento", "In√≠cio carregamento")
tempo_espera = calc_tempo("Encostou na doca F√°brica", "Entrada na F√°brica")
tempo_total = calc_tempo("Sa√≠da do p√°tio", "Entrada na F√°brica")
tempo_descarga = calc_tempo("Fim Descarregamento CD", "In√≠cio Descarregamento CD")
tempo_espera_cd = calc_tempo("Encostou na doca CD", "Entrada CD")
tempo_total_cd = calc_tempo("Sa√≠da CD", "Entrada CD")
tempo_percurso = calc_tempo("Entrada CD", "Sa√≠da do p√°tio")

# Bot√£o para salvar
if st.button("‚úÖ Salvar Registro"):
    nova_linha = [
        str(data),
        placa,
        conferente,
        *[st.session_state[campo] for campo in campos_tempo],
        tempo_carreg,
        tempo_espera,
        tempo_total,
        tempo_descarga,
        tempo_espera_cd,
        tempo_total_cd,
        tempo_percurso
    ]

    # Cabe√ßalhos da planilha
    headers = [
        "Data", "Placa do caminh√£o", "Nome do conferente",
        *campos_tempo,
        "Tempo de Carregamento", "Tempo Espera Doca", "Tempo Total",
        "Tempo de Descarregamento CD", "Tempo Espera Doca CD", "Tempo Total CD", "Tempo Percurso Para CD"
    ]

    # Se a planilha estiver vazia ou sem cabe√ßalhos, escreve os cabe√ßalhos
    if sheet.row_count == 0 or sheet.cell(1, 1).value != "Data":
        sheet.insert_row(headers, 1)

    # Adiciona nova linha
    sheet.append_row(nova_linha)

    st.success("Registro salvo com sucesso no Google Sheets!")

    # Resetar campos
    for campo in campos_tempo:
        st.session_state[campo] = ""

